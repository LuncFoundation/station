name: BuildTestDeploy
on:
    push:
        branches:
            - "*" # matches every branch that doesn't contain a '/'
            - "*/*" # matches every branch containing a single '/'
            - "**" # matches every branch
jobs:
    BuildTestDeploy:
        runs-on: self-hosted
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Locking the build queue
              run: workflow_queue queue lfx

            - name: Set NVM to 16
              shell: bash -l -eo pipefail {0}
              run: |
                export NVM_DIR="$HOME/.nvm"
                echo $NVM_DIR
                source "$NVM_DIR/nvm.sh"
                nvm use 16

            # - name: Installing Packages
            #   run: |
            #     export NVM_DIR="$HOME/.nvm"
            #     echo $NVM_DIR
            #     source "$NVM_DIR/nvm.sh"
            #     npm install

            # - name: Build Packages
            #   run: |
            #     export NVM_DIR="$HOME/.nvm"
            #     echo $NVM_DIR
            #     source "$NVM_DIR/nvm.sh"
            #     npm run build
            #     tar czvf station.tgz build

            # - name: Set NVM to LTS
            #   shell: bash -l -eo pipefail {0}
            #   run: |
            #     export NVM_DIR="$HOME/.nvm"
            #     echo $NVM_DIR
            #     source "$NVM_DIR/nvm.sh"
            #     nvm use --lts


            # - name: Development Deployment
            #   if: ${{ github.ref == 'refs/heads/develop' }}
            #   run: |
            #     ssh virtuo@lfstation "mkdir -p ~/castingapp && cd ~/castingapp && ./build-app-image.sh castingapp dev && ./swap-all.sh castingapp dev"

            - name: Production Deployment
              if: ${{ github.ref == 'refs/heads/main' }}
              run: |
                scp ./station.tgz station@lfstation:/home/station

            - name: Unlocking The Build Queue
              if: always()
              run: workflow_queue clear lfx
